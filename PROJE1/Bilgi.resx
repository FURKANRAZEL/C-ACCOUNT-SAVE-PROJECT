<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>